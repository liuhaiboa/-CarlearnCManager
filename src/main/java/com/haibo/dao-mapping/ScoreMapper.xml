<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haibo.dao.ScoreMapper" >
  <resultMap id="BaseResultMap" type="com.haibo.daomodel.Score" >
    <id column="n_id" property="nId" jdbcType="BIGINT" />
    <result column="s_score" property="sScore" jdbcType="VARCHAR" />
    <result column="s_useridcard" property="sUseridcard" jdbcType="VARCHAR" />
    <result column="s_userid" property="sUserid" jdbcType="INTEGER" />
    <result column="tcreatedate" property="tcreatedate" jdbcType="TIMESTAMP" />
    <result column="toperatedate" property="toperatedate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    n_id, s_score, s_useridcard, s_userid, tcreatedate, toperatedate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.haibo.daomodel.ScoreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from score
    where n_id = #{nId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from score
    where n_id = #{nId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.haibo.daomodel.ScoreExample" >
    delete from score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.haibo.daomodel.Score" >
    insert into score (n_id, s_score, s_useridcard, 
      s_userid, tcreatedate, toperatedate
      )
    values (#{nId,jdbcType=BIGINT}, #{sScore,jdbcType=VARCHAR}, #{sUseridcard,jdbcType=VARCHAR}, 
      #{sUserid,jdbcType=INTEGER}, #{tcreatedate,jdbcType=TIMESTAMP}, #{toperatedate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.haibo.daomodel.Score" >
    insert into score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="nId != null" >
        n_id,
      </if>
      <if test="sScore != null" >
        s_score,
      </if>
      <if test="sUseridcard != null" >
        s_useridcard,
      </if>
      <if test="sUserid != null" >
        s_userid,
      </if>
      <if test="tcreatedate != null" >
        tcreatedate,
      </if>
      <if test="toperatedate != null" >
        toperatedate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="nId != null" >
        #{nId,jdbcType=BIGINT},
      </if>
      <if test="sScore != null" >
        #{sScore,jdbcType=VARCHAR},
      </if>
      <if test="sUseridcard != null" >
        #{sUseridcard,jdbcType=VARCHAR},
      </if>
      <if test="sUserid != null" >
        #{sUserid,jdbcType=INTEGER},
      </if>
      <if test="tcreatedate != null" >
        #{tcreatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="toperatedate != null" >
        #{toperatedate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.haibo.daomodel.ScoreExample" resultType="java.lang.Integer" >
    select count(*) from score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update score
    <set >
      <if test="record.nId != null" >
        n_id = #{record.nId,jdbcType=BIGINT},
      </if>
      <if test="record.sScore != null" >
        s_score = #{record.sScore,jdbcType=VARCHAR},
      </if>
      <if test="record.sUseridcard != null" >
        s_useridcard = #{record.sUseridcard,jdbcType=VARCHAR},
      </if>
      <if test="record.sUserid != null" >
        s_userid = #{record.sUserid,jdbcType=INTEGER},
      </if>
      <if test="record.tcreatedate != null" >
        tcreatedate = #{record.tcreatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.toperatedate != null" >
        toperatedate = #{record.toperatedate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update score
    set n_id = #{record.nId,jdbcType=BIGINT},
      s_score = #{record.sScore,jdbcType=VARCHAR},
      s_useridcard = #{record.sUseridcard,jdbcType=VARCHAR},
      s_userid = #{record.sUserid,jdbcType=INTEGER},
      tcreatedate = #{record.tcreatedate,jdbcType=TIMESTAMP},
      toperatedate = #{record.toperatedate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.haibo.daomodel.Score" >
    update score
    <set >
      <if test="sScore != null" >
        s_score = #{sScore,jdbcType=VARCHAR},
      </if>
      <if test="sUseridcard != null" >
        s_useridcard = #{sUseridcard,jdbcType=VARCHAR},
      </if>
      <if test="sUserid != null" >
        s_userid = #{sUserid,jdbcType=INTEGER},
      </if>
      <if test="tcreatedate != null" >
        tcreatedate = #{tcreatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="toperatedate != null" >
        toperatedate = #{toperatedate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where n_id = #{nId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.haibo.daomodel.Score" >
    update score
    set s_score = #{sScore,jdbcType=VARCHAR},
      s_useridcard = #{sUseridcard,jdbcType=VARCHAR},
      s_userid = #{sUserid,jdbcType=INTEGER},
      tcreatedate = #{tcreatedate,jdbcType=TIMESTAMP},
      toperatedate = #{toperatedate,jdbcType=TIMESTAMP}
    where n_id = #{nId,jdbcType=BIGINT}
  </update>
</mapper>